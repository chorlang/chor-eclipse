/*
* generated by Xtext
*/
grammar InternalChor;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.chor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.chor.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.chor.services.ChorGrammarAccess;

}

@parser::members {

 	private ChorGrammarAccess grammarAccess;
 	
    public InternalChorParser(TokenStream input, ChorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Program";	
   	}
   	
   	@Override
   	protected ChorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	 iv_ruleProgram=ruleProgram 
	 { $current=$iv_ruleProgram.current; } 
	 EOF 
;

// Rule Program
ruleProgram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='program' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProgramAccess().getProgramKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)this_SEMICOLON_2=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_2, grammarAccess.getProgramAccess().getSEMICOLONTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getPreamblePreambleParserRuleCall_3_0()); 
	    }
		lv_preamble_3_0=rulePreamble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"preamble",
        		lv_preamble_3_0, 
        		"Preamble");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getProceduresProcedureParserRuleCall_4_0()); 
	    }
		lv_procedures_4_0=ruleProcedure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"procedures",
        		lv_procedures_4_0, 
        		"Procedure");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='main' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProgramAccess().getMainKeyword_5());
    }
this_LCURLY_6=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_6, grammarAccess.getProgramAccess().getLCURLYTerminalRuleCall_6()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getChoreographyChoreographyParserRuleCall_7_0()); 
	    }
		lv_choreography_7_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"choreography",
        		lv_choreography_7_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_8=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_8, grammarAccess.getProgramAccess().getRCURLYTerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRulePreamble
entryRulePreamble returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreambleRule()); }
	 iv_rulePreamble=rulePreamble 
	 { $current=$iv_rulePreamble.current; } 
	 EOF 
;

// Rule Preamble
rulePreamble returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPreambleAccess().getPreambleAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getPreambleAccess().getProtocolsProtocolParserRuleCall_1_0_0()); 
	    }
		lv_protocols_1_0=ruleProtocol		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreambleRule());
	        }
       		add(
       			$current, 
       			"protocols",
        		lv_protocols_1_0, 
        		"Protocol");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPreambleAccess().getSiteSiteParserRuleCall_1_1_0()); 
	    }
		lv_site_2_0=ruleSite		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreambleRule());
	        }
       		add(
       			$current, 
       			"site",
        		lv_site_2_0, 
        		"Site");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleProcedure
entryRuleProcedure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcedureRule()); }
	 iv_ruleProcedure=ruleProcedure 
	 { $current=$iv_ruleProcedure.current; } 
	 EOF 
;

// Rule Procedure
ruleProcedure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='define' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcedureAccess().getDefineKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)this_LPAREN_2=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_2, grammarAccess.getProcedureAccess().getLPARENTerminalRuleCall_2()); 
    }
(
(
		lv_threadParameters_3_0=RULE_ID
		{
			newLeafNode(lv_threadParameters_3_0, grammarAccess.getProcedureAccess().getThreadParametersIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedureRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"threadParameters",
        		lv_threadParameters_3_0, 
        		"ID");
	    }

)
)(this_COMMA_4=RULE_COMMA
    { 
    newLeafNode(this_COMMA_4, grammarAccess.getProcedureAccess().getCOMMATerminalRuleCall_4_0()); 
    }
(
(
		lv_threadParameters_5_0=RULE_ID
		{
			newLeafNode(lv_threadParameters_5_0, grammarAccess.getProcedureAccess().getThreadParametersIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedureRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"threadParameters",
        		lv_threadParameters_5_0, 
        		"ID");
	    }

)
))*this_RPAREN_6=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_6, grammarAccess.getProcedureAccess().getRPARENTerminalRuleCall_5()); 
    }
this_LPAREN_7=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_7, grammarAccess.getProcedureAccess().getLPARENTerminalRuleCall_6()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getProcedureAccess().getSessionParametersSessionProcedureParameterParserRuleCall_7_0_0()); 
	    }
		lv_sessionParameters_8_0=ruleSessionProcedureParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedureRule());
	        }
       		add(
       			$current, 
       			"sessionParameters",
        		lv_sessionParameters_8_0, 
        		"SessionProcedureParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_9=RULE_COMMA
    { 
    newLeafNode(this_COMMA_9, grammarAccess.getProcedureAccess().getCOMMATerminalRuleCall_7_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedureAccess().getSessionParametersSessionProcedureParameterParserRuleCall_7_1_1_0()); 
	    }
		lv_sessionParameters_10_0=ruleSessionProcedureParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedureRule());
	        }
       		add(
       			$current, 
       			"sessionParameters",
        		lv_sessionParameters_10_0, 
        		"SessionProcedureParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?this_RPAREN_11=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_11, grammarAccess.getProcedureAccess().getRPARENTerminalRuleCall_8()); 
    }
this_LCURLY_12=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_12, grammarAccess.getProcedureAccess().getLCURLYTerminalRuleCall_9()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedureAccess().getChoreographyChoreographyParserRuleCall_10_0()); 
	    }
		lv_choreography_13_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedureRule());
	        }
       		set(
       			$current, 
       			"choreography",
        		lv_choreography_13_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_14=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_14, grammarAccess.getProcedureAccess().getRCURLYTerminalRuleCall_11()); 
    }
)
;





// Entry rule entryRuleSessionProcedureParameter
entryRuleSessionProcedureParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSessionProcedureParameterRule()); }
	 iv_ruleSessionProcedureParameter=ruleSessionProcedureParameter 
	 { $current=$iv_ruleSessionProcedureParameter.current; } 
	 EOF 
;

// Rule SessionProcedureParameter
ruleSessionProcedureParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_session_0_0=RULE_ID
		{
			newLeafNode(lv_session_0_0, grammarAccess.getSessionProcedureParameterAccess().getSessionIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSessionProcedureParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"session",
        		lv_session_0_0, 
        		"ID");
	    }

)
)this_LSQUARE_1=RULE_LSQUARE
    { 
    newLeafNode(this_LSQUARE_1, grammarAccess.getSessionProcedureParameterAccess().getLSQUARETerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSessionProcedureParameterAccess().getTypeGlobalTypeCallParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleGlobalTypeCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSessionProcedureParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"GlobalTypeCall");
	        afterParserOrEnumRuleCall();
	    }

)
)this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getSessionProcedureParameterAccess().getCOLONTerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSessionProcedureParameterAccess().getActiveThreadsThreadWithRoleParserRuleCall_4_0()); 
	    }
		lv_activeThreads_4_0=ruleThreadWithRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSessionProcedureParameterRule());
	        }
       		add(
       			$current, 
       			"activeThreads",
        		lv_activeThreads_4_0, 
        		"ThreadWithRole");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_5=RULE_COMMA
    { 
    newLeafNode(this_COMMA_5, grammarAccess.getSessionProcedureParameterAccess().getCOMMATerminalRuleCall_5_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSessionProcedureParameterAccess().getActiveThreadsThreadWithRoleParserRuleCall_5_1_0()); 
	    }
		lv_activeThreads_6_0=ruleThreadWithRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSessionProcedureParameterRule());
	        }
       		add(
       			$current, 
       			"activeThreads",
        		lv_activeThreads_6_0, 
        		"ThreadWithRole");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RSQUARE_7=RULE_RSQUARE
    { 
    newLeafNode(this_RSQUARE_7, grammarAccess.getSessionProcedureParameterAccess().getRSQUARETerminalRuleCall_6()); 
    }
)
;





// Entry rule entryRuleProtocol
entryRuleProtocol returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolRule()); }
	 iv_ruleProtocol=ruleProtocol 
	 { $current=$iv_ruleProtocol.current; } 
	 EOF 
;

// Rule Protocol
ruleProtocol returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='protocol' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProtocolAccess().getProtocolKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProtocolAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProtocolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)this_LCURLY_2=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_2, grammarAccess.getProtocolAccess().getLCURLYTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolAccess().getTypeGlobalTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleGlobalType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"GlobalType");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_4=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_4, grammarAccess.getProtocolAccess().getRCURLYTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleSite
entryRuleSite returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSiteRule()); }
	 iv_ruleSite=ruleSite 
	 { $current=$iv_ruleSite.current; } 
	 EOF 
;

// Rule Site
ruleSite returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='public' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSiteAccess().getPublicKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSiteAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiteRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)this_COLON_2=RULE_COLON
    { 
    newLeafNode(this_COLON_2, grammarAccess.getSiteAccess().getCOLONTerminalRuleCall_2()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiteRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getSiteAccess().getProtocolProtocolCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleGlobalType
entryRuleGlobalType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalTypeRule()); }
	 iv_ruleGlobalType=ruleGlobalType 
	 { $current=$iv_ruleGlobalType.current; } 
	 EOF 
;

// Rule GlobalType
ruleGlobalType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGlobalTypeAccess().getGlobalTypeInteractionParserRuleCall_0()); 
    }
    this_GlobalTypeInteraction_0=ruleGlobalTypeInteraction
    { 
        $current = $this_GlobalTypeInteraction_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGlobalTypeAccess().getGlobalTypeCallParserRuleCall_1()); 
    }
    this_GlobalTypeCall_1=ruleGlobalTypeCall
    { 
        $current = $this_GlobalTypeCall_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGlobalTypeInteraction
entryRuleGlobalTypeInteraction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalTypeInteractionRule()); }
	 iv_ruleGlobalTypeInteraction=ruleGlobalTypeInteraction 
	 { $current=$iv_ruleGlobalTypeInteraction.current; } 
	 EOF 
;

// Rule GlobalTypeInteraction
ruleGlobalTypeInteraction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_sender_0_0=RULE_ID
		{
			newLeafNode(lv_sender_0_0, grammarAccess.getGlobalTypeInteractionAccess().getSenderIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlobalTypeInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sender",
        		lv_sender_0_0, 
        		"ID");
	    }

)
)this_ARROW_1=RULE_ARROW
    { 
    newLeafNode(this_ARROW_1, grammarAccess.getGlobalTypeInteractionAccess().getARROWTerminalRuleCall_1()); 
    }
(
(
		lv_receiver_2_0=RULE_ID
		{
			newLeafNode(lv_receiver_2_0, grammarAccess.getGlobalTypeInteractionAccess().getReceiverIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlobalTypeInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"receiver",
        		lv_receiver_2_0, 
        		"ID");
	    }

)
)this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getGlobalTypeInteractionAccess().getCOLONTerminalRuleCall_3()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalTypeInteractionAccess().getBranchesBranchGTypeParserRuleCall_4_0_0()); 
	    }
		lv_branches_4_0=ruleBranchGType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalTypeInteractionRule());
	        }
       		add(
       			$current, 
       			"branches",
        		lv_branches_4_0, 
        		"BranchGType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_LCURLY_5=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_5, grammarAccess.getGlobalTypeInteractionAccess().getLCURLYTerminalRuleCall_4_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalTypeInteractionAccess().getBranchesBranchGTypeParserRuleCall_4_1_1_0()); 
	    }
		lv_branches_6_0=ruleBranchGType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalTypeInteractionRule());
	        }
       		add(
       			$current, 
       			"branches",
        		lv_branches_6_0, 
        		"BranchGType");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_7=RULE_COMMA
    { 
    newLeafNode(this_COMMA_7, grammarAccess.getGlobalTypeInteractionAccess().getCOMMATerminalRuleCall_4_1_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalTypeInteractionAccess().getBranchesBranchGTypeParserRuleCall_4_1_2_1_0()); 
	    }
		lv_branches_8_0=ruleBranchGType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalTypeInteractionRule());
	        }
       		add(
       			$current, 
       			"branches",
        		lv_branches_8_0, 
        		"BranchGType");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RCURLY_9=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_9, grammarAccess.getGlobalTypeInteractionAccess().getRCURLYTerminalRuleCall_4_1_3()); 
    }
)))
;





// Entry rule entryRuleGlobalTypeCall
entryRuleGlobalTypeCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalTypeCallRule()); }
	 iv_ruleGlobalTypeCall=ruleGlobalTypeCall 
	 { $current=$iv_ruleGlobalTypeCall.current; } 
	 EOF 
;

// Rule GlobalTypeCall
ruleGlobalTypeCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlobalTypeCallRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getGlobalTypeCallAccess().getProtocolProtocolCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleBranchGType
entryRuleBranchGType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBranchGTypeRule()); }
	 iv_ruleBranchGType=ruleBranchGType 
	 { $current=$iv_ruleBranchGType.current; } 
	 EOF 
;

// Rule BranchGType
ruleBranchGType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operation_0_0=RULE_ID
		{
			newLeafNode(lv_operation_0_0, grammarAccess.getBranchGTypeAccess().getOperationIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBranchGTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_0_0, 
        		"ID");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getBranchGTypeAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBranchGTypeAccess().getDataTypeDataTypeParserRuleCall_2_0()); 
	    }
		lv_dataType_2_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBranchGTypeRule());
	        }
       		set(
       			$current, 
       			"dataType",
        		lv_dataType_2_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_3=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_3, grammarAccess.getBranchGTypeAccess().getRPARENTerminalRuleCall_3()); 
    }
(this_SEMICOLON_4=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_4, grammarAccess.getBranchGTypeAccess().getSEMICOLONTerminalRuleCall_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBranchGTypeAccess().getContinuationGlobalTypeParserRuleCall_4_1_0()); 
	    }
		lv_continuation_5_0=ruleGlobalType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBranchGTypeRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_5_0, 
        		"GlobalType");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	 iv_ruleDataType=ruleDataType 
	 { $current=$iv_ruleDataType.current; } 
	 EOF 
;

// Rule DataType
ruleDataType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDataTypeAccess().getBasicTypeParserRuleCall_0()); 
    }
    this_BasicType_0=ruleBasicType
    { 
        $current = $this_BasicType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDataTypeAccess().getDelegationTypeParserRuleCall_1()); 
    }
    this_DelegationType_1=ruleDelegationType
    { 
        $current = $this_DelegationType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDelegationType
entryRuleDelegationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDelegationTypeRule()); }
	 iv_ruleDelegationType=ruleDelegationType 
	 { $current=$iv_ruleDelegationType.current; } 
	 EOF 
;

// Rule DelegationType
ruleDelegationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDelegationTypeAccess().getTypeGlobalTypeCallParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleGlobalTypeCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelegationTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"GlobalTypeCall");
	        afterParserOrEnumRuleCall();
	    }

)
)this_AT_1=RULE_AT
    { 
    newLeafNode(this_AT_1, grammarAccess.getDelegationTypeAccess().getATTerminalRuleCall_1()); 
    }
(
(
		lv_role_2_0=RULE_ID
		{
			newLeafNode(lv_role_2_0, grammarAccess.getDelegationTypeAccess().getRoleIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelegationTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"role",
        		lv_role_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleBasicType
entryRuleBasicType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicTypeRule()); }
	 iv_ruleBasicType=ruleBasicType 
	 { $current=$iv_ruleBasicType.current; } 
	 EOF 
;

// Rule BasicType
ruleBasicType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBasicTypeAccess().getBasicTypeAction_0_0(),
            $current);
    }
)(
(
		lv_name_1_0=	'int' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getBasicTypeAccess().getNameIntKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "int");
	    }

)
))
    |(
(
		lv_name_2_0=	'string' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getBasicTypeAccess().getNameStringKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "string");
	    }

)
)
    |(
(
		lv_name_3_0=	'bool' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getBasicTypeAccess().getNameBoolKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "bool");
	    }

)
)
    |(
(
		lv_name_4_0=	'void' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getBasicTypeAccess().getNameVoidKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "void");
	    }

)
))
;





// Entry rule entryRuleChoreography
entryRuleChoreography returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChoreographyRule()); }
	 iv_ruleChoreography=ruleChoreography 
	 { $current=$iv_ruleChoreography.current; } 
	 EOF 
;

// Rule Choreography
ruleChoreography returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getStartParserRuleCall_0()); 
    }
    this_Start_0=ruleStart
    { 
        $current = $this_Start_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getInteractionParserRuleCall_1()); 
    }
    this_Interaction_1=ruleInteraction
    { 
        $current = $this_Interaction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getDelegationParserRuleCall_2()); 
    }
    this_Delegation_2=ruleDelegation
    { 
        $current = $this_Delegation_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getCallParserRuleCall_3()); 
    }
    this_Call_3=ruleCall
    { 
        $current = $this_Call_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getIfThenElseParserRuleCall_4()); 
    }
    this_IfThenElse_4=ruleIfThenElse
    { 
        $current = $this_IfThenElse_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getLocalCodeParserRuleCall_5()); 
    }
    this_LocalCode_5=ruleLocalCode
    { 
        $current = $this_LocalCode_5.current; 
        afterParserOrEnumRuleCall();
    }

    |(this_LCURLY_6=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_6, grammarAccess.getChoreographyAccess().getLCURLYTerminalRuleCall_6_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getChoreographyParserRuleCall_6_1()); 
    }
    this_Choreography_7=ruleChoreography
    { 
        $current = $this_Choreography_7.current; 
        afterParserOrEnumRuleCall();
    }
this_RCURLY_8=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_8, grammarAccess.getChoreographyAccess().getRCURLYTerminalRuleCall_6_2()); 
    }
))
;





// Entry rule entryRuleStart
entryRuleStart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStartRule()); }
	 iv_ruleStart=ruleStart 
	 { $current=$iv_ruleStart.current; } 
	 EOF 
;

// Rule Start
ruleStart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStartAccess().getActiveThreadsThreadWithRoleParserRuleCall_0_0()); 
	    }
		lv_activeThreads_0_0=ruleThreadWithRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartRule());
	        }
       		add(
       			$current, 
       			"activeThreads",
        		lv_activeThreads_0_0, 
        		"ThreadWithRole");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getStartAccess().getCOMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStartAccess().getActiveThreadsThreadWithRoleParserRuleCall_1_1_0()); 
	    }
		lv_activeThreads_2_0=ruleThreadWithRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartRule());
	        }
       		add(
       			$current, 
       			"activeThreads",
        		lv_activeThreads_2_0, 
        		"ThreadWithRole");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3='start' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStartAccess().getStartKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStartAccess().getServiceThreadsThreadWithRoleParserRuleCall_3_0_0()); 
	    }
		lv_serviceThreads_4_0=ruleThreadWithRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartRule());
	        }
       		add(
       			$current, 
       			"serviceThreads",
        		lv_serviceThreads_4_0, 
        		"ThreadWithRole");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_5=RULE_COMMA
    { 
    newLeafNode(this_COMMA_5, grammarAccess.getStartAccess().getCOMMATerminalRuleCall_3_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStartAccess().getServiceThreadsThreadWithRoleParserRuleCall_3_1_1_0()); 
	    }
		lv_serviceThreads_6_0=ruleThreadWithRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartRule());
	        }
       		add(
       			$current, 
       			"serviceThreads",
        		lv_serviceThreads_6_0, 
        		"ThreadWithRole");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?this_COLON_7=RULE_COLON
    { 
    newLeafNode(this_COLON_7, grammarAccess.getStartAccess().getCOLONTerminalRuleCall_4()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStartRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getStartAccess().getPublicChannelSiteCrossReference_5_0()); 
	}

)
)this_LPAREN_9=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getStartAccess().getLPARENTerminalRuleCall_6()); 
    }
(
(
		lv_session_10_0=RULE_ID
		{
			newLeafNode(lv_session_10_0, grammarAccess.getStartAccess().getSessionIDTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"session",
        		lv_session_10_0, 
        		"ID");
	    }

)
)this_RPAREN_11=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_11, grammarAccess.getStartAccess().getRPARENTerminalRuleCall_8()); 
    }
(this_SEMICOLON_12=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_12, grammarAccess.getStartAccess().getSEMICOLONTerminalRuleCall_9_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStartAccess().getContinuationChoreographyParserRuleCall_9_1_0()); 
	    }
		lv_continuation_13_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_13_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleThreadWithRole
entryRuleThreadWithRole returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getThreadWithRoleRule()); }
	 iv_ruleThreadWithRole=ruleThreadWithRole 
	 { $current=$iv_ruleThreadWithRole.current; } 
	 EOF 
;

// Rule ThreadWithRole
ruleThreadWithRole returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_thread_0_0=RULE_ID
		{
			newLeafNode(lv_thread_0_0, grammarAccess.getThreadWithRoleAccess().getThreadIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getThreadWithRoleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_0_0, 
        		"ID");
	    }

)
)this_LSQUARE_1=RULE_LSQUARE
    { 
    newLeafNode(this_LSQUARE_1, grammarAccess.getThreadWithRoleAccess().getLSQUARETerminalRuleCall_1()); 
    }
(
(
		lv_role_2_0=RULE_ID
		{
			newLeafNode(lv_role_2_0, grammarAccess.getThreadWithRoleAccess().getRoleIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getThreadWithRoleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"role",
        		lv_role_2_0, 
        		"ID");
	    }

)
)this_RSQUARE_3=RULE_RSQUARE
    { 
    newLeafNode(this_RSQUARE_3, grammarAccess.getThreadWithRoleAccess().getRSQUARETerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleInteraction
entryRuleInteraction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractionRule()); }
	 iv_ruleInteraction=ruleInteraction 
	 { $current=$iv_ruleInteraction.current; } 
	 EOF 
;

// Rule Interaction
ruleInteraction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_sender_0_0=RULE_ID
		{
			newLeafNode(lv_sender_0_0, grammarAccess.getInteractionAccess().getSenderIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sender",
        		lv_sender_0_0, 
        		"ID");
	    }

)
)(this_DOT_1=RULE_DOT
    { 
    newLeafNode(this_DOT_1, grammarAccess.getInteractionAccess().getDOTTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionAccess().getSenderExpressionExpressionBasicTermParserRuleCall_1_1_0()); 
	    }
		lv_senderExpression_2_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionRule());
	        }
       		set(
       			$current, 
       			"senderExpression",
        		lv_senderExpression_2_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
))?this_ARROW_3=RULE_ARROW
    { 
    newLeafNode(this_ARROW_3, grammarAccess.getInteractionAccess().getARROWTerminalRuleCall_2()); 
    }
(
(
		lv_receiver_4_0=RULE_ID
		{
			newLeafNode(lv_receiver_4_0, grammarAccess.getInteractionAccess().getReceiverIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"receiver",
        		lv_receiver_4_0, 
        		"ID");
	    }

)
)(this_DOT_5=RULE_DOT
    { 
    newLeafNode(this_DOT_5, grammarAccess.getInteractionAccess().getDOTTerminalRuleCall_4_0()); 
    }
(
(
		lv_receiverVariable_6_0=RULE_ID
		{
			newLeafNode(lv_receiverVariable_6_0, grammarAccess.getInteractionAccess().getReceiverVariableIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"receiverVariable",
        		lv_receiverVariable_6_0, 
        		"ID");
	    }

)
))?this_COLON_7=RULE_COLON
    { 
    newLeafNode(this_COLON_7, grammarAccess.getInteractionAccess().getCOLONTerminalRuleCall_5()); 
    }
(
(
		lv_operation_8_0=RULE_ID
		{
			newLeafNode(lv_operation_8_0, grammarAccess.getInteractionAccess().getOperationIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_8_0, 
        		"ID");
	    }

)
)this_LPAREN_9=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getInteractionAccess().getLPARENTerminalRuleCall_7()); 
    }
(
(
		lv_session_10_0=RULE_ID
		{
			newLeafNode(lv_session_10_0, grammarAccess.getInteractionAccess().getSessionIDTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"session",
        		lv_session_10_0, 
        		"ID");
	    }

)
)this_RPAREN_11=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_11, grammarAccess.getInteractionAccess().getRPARENTerminalRuleCall_9()); 
    }
(this_SEMICOLON_12=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_12, grammarAccess.getInteractionAccess().getSEMICOLONTerminalRuleCall_10_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionAccess().getContinuationChoreographyParserRuleCall_10_1_0()); 
	    }
		lv_continuation_13_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_13_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleDelegation
entryRuleDelegation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDelegationRule()); }
	 iv_ruleDelegation=ruleDelegation 
	 { $current=$iv_ruleDelegation.current; } 
	 EOF 
;

// Rule Delegation
ruleDelegation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_sender_0_0=RULE_ID
		{
			newLeafNode(lv_sender_0_0, grammarAccess.getDelegationAccess().getSenderIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelegationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sender",
        		lv_sender_0_0, 
        		"ID");
	    }

)
)this_ARROW_1=RULE_ARROW
    { 
    newLeafNode(this_ARROW_1, grammarAccess.getDelegationAccess().getARROWTerminalRuleCall_1()); 
    }
(
(
		lv_receiver_2_0=RULE_ID
		{
			newLeafNode(lv_receiver_2_0, grammarAccess.getDelegationAccess().getReceiverIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelegationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"receiver",
        		lv_receiver_2_0, 
        		"ID");
	    }

)
)this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getDelegationAccess().getCOLONTerminalRuleCall_3()); 
    }
(
(
		lv_operation_4_0=RULE_ID
		{
			newLeafNode(lv_operation_4_0, grammarAccess.getDelegationAccess().getOperationIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelegationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_4_0, 
        		"ID");
	    }

)
)this_LPAREN_5=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_5, grammarAccess.getDelegationAccess().getLPARENTerminalRuleCall_5()); 
    }
(
(
		lv_session_6_0=RULE_ID
		{
			newLeafNode(lv_session_6_0, grammarAccess.getDelegationAccess().getSessionIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelegationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"session",
        		lv_session_6_0, 
        		"ID");
	    }

)
)this_LPAREN_7=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_7, grammarAccess.getDelegationAccess().getLPARENTerminalRuleCall_7()); 
    }
(
(
		lv_delegatedSession_8_0=RULE_ID
		{
			newLeafNode(lv_delegatedSession_8_0, grammarAccess.getDelegationAccess().getDelegatedSessionIDTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelegationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"delegatedSession",
        		lv_delegatedSession_8_0, 
        		"ID");
	    }

)
)this_RPAREN_9=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_9, grammarAccess.getDelegationAccess().getRPARENTerminalRuleCall_9()); 
    }
this_RPAREN_10=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getDelegationAccess().getRPARENTerminalRuleCall_10()); 
    }
(this_SEMICOLON_11=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_11, grammarAccess.getDelegationAccess().getSEMICOLONTerminalRuleCall_11_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDelegationAccess().getContinuationChoreographyParserRuleCall_11_1_0()); 
	    }
		lv_continuation_12_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelegationRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_12_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleCall
entryRuleCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCallRule()); }
	 iv_ruleCall=ruleCall 
	 { $current=$iv_ruleCall.current; } 
	 EOF 
;

// Rule Call
ruleCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCallRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getCallAccess().getProcedureProcedureCrossReference_0_0()); 
	}

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getCallAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		lv_threads_2_0=RULE_ID
		{
			newLeafNode(lv_threads_2_0, grammarAccess.getCallAccess().getThreadsIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCallRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"threads",
        		lv_threads_2_0, 
        		"ID");
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getCallAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_threads_4_0=RULE_ID
		{
			newLeafNode(lv_threads_4_0, grammarAccess.getCallAccess().getThreadsIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCallRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"threads",
        		lv_threads_4_0, 
        		"ID");
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getCallAccess().getRPARENTerminalRuleCall_4()); 
    }
this_LPAREN_6=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_6, grammarAccess.getCallAccess().getLPARENTerminalRuleCall_5()); 
    }
((
(
		lv_sessions_7_0=RULE_ID
		{
			newLeafNode(lv_sessions_7_0, grammarAccess.getCallAccess().getSessionsIDTerminalRuleCall_6_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCallRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"sessions",
        		lv_sessions_7_0, 
        		"ID");
	    }

)
)(this_COMMA_8=RULE_COMMA
    { 
    newLeafNode(this_COMMA_8, grammarAccess.getCallAccess().getCOMMATerminalRuleCall_6_1_0()); 
    }
(
(
		lv_sessions_9_0=RULE_ID
		{
			newLeafNode(lv_sessions_9_0, grammarAccess.getCallAccess().getSessionsIDTerminalRuleCall_6_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCallRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"sessions",
        		lv_sessions_9_0, 
        		"ID");
	    }

)
))*)?this_RPAREN_10=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getCallAccess().getRPARENTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleIfThenElse
entryRuleIfThenElse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfThenElseRule()); }
	 iv_ruleIfThenElse=ruleIfThenElse 
	 { $current=$iv_ruleIfThenElse.current; } 
	 EOF 
;

// Rule IfThenElse
ruleIfThenElse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIfThenElseAccess().getIfKeyword_0());
    }
this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getIfThenElseAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseAccess().getConditionConditionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_3=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_3, grammarAccess.getIfThenElseAccess().getRPARENTerminalRuleCall_3()); 
    }
this_AT_4=RULE_AT
    { 
    newLeafNode(this_AT_4, grammarAccess.getIfThenElseAccess().getATTerminalRuleCall_4()); 
    }
(
(
		lv_thread_5_0=RULE_ID
		{
			newLeafNode(lv_thread_5_0, grammarAccess.getIfThenElseAccess().getThreadIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfThenElseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_5_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseAccess().getThenChoreographyParserRuleCall_6_0()); 
	    }
		lv_then_6_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_6_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='else' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIfThenElseAccess().getElseKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseAccess().getElseChoreographyParserRuleCall_7_1_0()); 
	    }
		lv_else_8_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_8_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleLocalCode
entryRuleLocalCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalCodeRule()); }
	 iv_ruleLocalCode=ruleLocalCode 
	 { $current=$iv_ruleLocalCode.current; } 
	 EOF 
;

// Rule LocalCode
ruleLocalCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalCodeAccess().getLocalAskCommandAction_0_0(),
            $current);
    }
)	otherlv_1='ask' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLocalCodeAccess().getAskKeyword_0_1());
    }
this_AT_2=RULE_AT
    { 
    newLeafNode(this_AT_2, grammarAccess.getLocalCodeAccess().getATTerminalRuleCall_0_2()); 
    }
(
(
		lv_thread_3_0=RULE_ID
		{
			newLeafNode(lv_thread_3_0, grammarAccess.getLocalCodeAccess().getThreadIDTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_3_0, 
        		"ID");
	    }

)
)this_LPAREN_4=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_4, grammarAccess.getLocalCodeAccess().getLPARENTerminalRuleCall_0_4()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalCodeAccess().getQuestionExpressionParserRuleCall_0_5_0()); 
	    }
		lv_question_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalCodeRule());
	        }
       		set(
       			$current, 
       			"question",
        		lv_question_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_COMMA_6=RULE_COMMA
    { 
    newLeafNode(this_COMMA_6, grammarAccess.getLocalCodeAccess().getCOMMATerminalRuleCall_0_6()); 
    }
(
(
		lv_resultVariable_7_0=RULE_ID
		{
			newLeafNode(lv_resultVariable_7_0, grammarAccess.getLocalCodeAccess().getResultVariableIDTerminalRuleCall_0_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"resultVariable",
        		lv_resultVariable_7_0, 
        		"ID");
	    }

)
)this_RPAREN_8=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_8, grammarAccess.getLocalCodeAccess().getRPARENTerminalRuleCall_0_8()); 
    }
(this_SEMICOLON_9=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_9, grammarAccess.getLocalCodeAccess().getSEMICOLONTerminalRuleCall_0_9_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalCodeAccess().getContinuationChoreographyParserRuleCall_0_9_1_0()); 
	    }
		lv_continuation_10_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalCodeRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_10_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalCodeAccess().getLocalShowCommandAction_1_0(),
            $current);
    }
)	otherlv_12='show' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLocalCodeAccess().getShowKeyword_1_1());
    }
this_AT_13=RULE_AT
    { 
    newLeafNode(this_AT_13, grammarAccess.getLocalCodeAccess().getATTerminalRuleCall_1_2()); 
    }
(
(
		lv_thread_14_0=RULE_ID
		{
			newLeafNode(lv_thread_14_0, grammarAccess.getLocalCodeAccess().getThreadIDTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_14_0, 
        		"ID");
	    }

)
)this_LPAREN_15=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_15, grammarAccess.getLocalCodeAccess().getLPARENTerminalRuleCall_1_4()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalCodeAccess().getExpressionExpressionParserRuleCall_1_5_0()); 
	    }
		lv_expression_16_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalCodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_16_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_17=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_17, grammarAccess.getLocalCodeAccess().getRPARENTerminalRuleCall_1_6()); 
    }
(this_SEMICOLON_18=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_18, grammarAccess.getLocalCodeAccess().getSEMICOLONTerminalRuleCall_1_7_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalCodeAccess().getContinuationChoreographyParserRuleCall_1_7_1_0()); 
	    }
		lv_continuation_19_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalCodeRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_19_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalCodeAccess().getLocalAssignmentCommandAction_2_0(),
            $current);
    }
)	otherlv_21='local' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getLocalCodeAccess().getLocalKeyword_2_1());
    }
this_AT_22=RULE_AT
    { 
    newLeafNode(this_AT_22, grammarAccess.getLocalCodeAccess().getATTerminalRuleCall_2_2()); 
    }
(
(
		lv_thread_23_0=RULE_ID
		{
			newLeafNode(lv_thread_23_0, grammarAccess.getLocalCodeAccess().getThreadIDTerminalRuleCall_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_23_0, 
        		"ID");
	    }

)
)this_LPAREN_24=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_24, grammarAccess.getLocalCodeAccess().getLPARENTerminalRuleCall_2_4()); 
    }
(
(
		lv_variable_25_0=RULE_ID
		{
			newLeafNode(lv_variable_25_0, grammarAccess.getLocalCodeAccess().getVariableIDTerminalRuleCall_2_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variable",
        		lv_variable_25_0, 
        		"ID");
	    }

)
)this_ASSIGN_26=RULE_ASSIGN
    { 
    newLeafNode(this_ASSIGN_26, grammarAccess.getLocalCodeAccess().getASSIGNTerminalRuleCall_2_6()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalCodeAccess().getExpressionExpressionParserRuleCall_2_7_0()); 
	    }
		lv_expression_27_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalCodeRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_27_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_28=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_28, grammarAccess.getLocalCodeAccess().getRPARENTerminalRuleCall_2_8()); 
    }
(this_SEMICOLON_29=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_29, grammarAccess.getLocalCodeAccess().getSEMICOLONTerminalRuleCall_2_9_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalCodeAccess().getContinuationChoreographyParserRuleCall_2_9_1_0()); 
	    }
		lv_continuation_30_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalCodeRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_30_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getSumExpressionSumExpressionParserRuleCall_0()); 
	    }
		lv_sumExpression_0_0=ruleSumExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"sumExpression",
        		lv_sumExpression_0_0, 
        		"SumExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSumExpression
entryRuleSumExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSumExpressionRule()); }
	 iv_ruleSumExpression=ruleSumExpression 
	 { $current=$iv_ruleSumExpression.current; } 
	 EOF 
;

// Rule SumExpression
ruleSumExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionAccess().getChildrenExpressionBasicTermParserRuleCall_0_0()); 
	    }
		lv_children_0_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_0_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionAccess().getChildrenSumExpressionTermParserRuleCall_1_0()); 
	    }
		lv_children_1_0=ruleSumExpressionTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_1_0, 
        		"SumExpressionTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSumExpressionTerm
entryRuleSumExpressionTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSumExpressionTermRule()); }
	 iv_ruleSumExpressionTerm=ruleSumExpressionTerm 
	 { $current=$iv_ruleSumExpressionTerm.current; } 
	 EOF 
;

// Rule SumExpressionTerm
ruleSumExpressionTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSumExpressionTermAccess().getSumExpressionAddTermAction_0_0(),
            $current);
    }
)this_PLUS_1=RULE_PLUS
    { 
    newLeafNode(this_PLUS_1, grammarAccess.getSumExpressionTermAccess().getPLUSTerminalRuleCall_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionTermAccess().getExpressionExpressionBasicTermParserRuleCall_0_2_0()); 
	    }
		lv_expression_2_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionTermRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSumExpressionTermAccess().getSumExpressionSubtractTermAction_1_0(),
            $current);
    }
)this_MINUS_4=RULE_MINUS
    { 
    newLeafNode(this_MINUS_4, grammarAccess.getSumExpressionTermAccess().getMINUSTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionTermAccess().getExpressionExpressionBasicTermParserRuleCall_1_2_0()); 
	    }
		lv_expression_5_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionTermRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleExpressionBasicTerm
entryRuleExpressionBasicTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionBasicTermRule()); }
	 iv_ruleExpressionBasicTerm=ruleExpressionBasicTerm 
	 { $current=$iv_ruleExpressionBasicTerm.current; } 
	 EOF 
;

// Rule ExpressionBasicTerm
ruleExpressionBasicTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_variable_0_0=RULE_ID
		{
			newLeafNode(lv_variable_0_0, grammarAccess.getExpressionBasicTermAccess().getVariableIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionBasicTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variable",
        		lv_variable_0_0, 
        		"ID");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionBasicTermAccess().getConstantConstantParserRuleCall_1_0()); 
	    }
		lv_constant_1_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionBasicTermRule());
	        }
       		set(
       			$current, 
       			"constant",
        		lv_constant_1_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_LPAREN_2=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_2, grammarAccess.getExpressionBasicTermAccess().getLPARENTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionBasicTermAccess().getExpressionExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionBasicTermRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_4=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_4, grammarAccess.getExpressionBasicTermAccess().getRPARENTerminalRuleCall_2_2()); 
    }
))
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_intValue_0_0=RULE_INT
		{
			newLeafNode(lv_intValue_0_0, grammarAccess.getConstantAccess().getIntValueINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"intValue",
        		lv_intValue_0_0, 
        		"INT");
	    }

)
)
    |(
(
		lv_strValue_1_0=RULE_STRING
		{
			newLeafNode(lv_strValue_1_0, grammarAccess.getConstantAccess().getStrValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"strValue",
        		lv_strValue_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getCompareConditionCompareConditionParserRuleCall_0()); 
	    }
		lv_compareCondition_0_0=ruleCompareCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		set(
       			$current, 
       			"compareCondition",
        		lv_compareCondition_0_0, 
        		"CompareCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleCompareCondition
entryRuleCompareCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompareConditionRule()); }
	 iv_ruleCompareCondition=ruleCompareCondition 
	 { $current=$iv_ruleCompareCondition.current; } 
	 EOF 
;

// Rule CompareCondition
ruleCompareCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompareConditionAccess().getLeftExpressionExpressionParserRuleCall_0_0()); 
	    }
		lv_leftExpression_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareConditionRule());
	        }
       		set(
       			$current, 
       			"leftExpression",
        		lv_leftExpression_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareConditionAccess().getOperatorConditionOperatorParserRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleConditionOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareConditionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"ConditionOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareConditionAccess().getRightExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_rightExpression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareConditionRule());
	        }
       		set(
       			$current, 
       			"rightExpression",
        		lv_rightExpression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConditionOperator
entryRuleConditionOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionOperatorRule()); }
	 iv_ruleConditionOperator=ruleConditionOperator 
	 { $current=$iv_ruleConditionOperator.current; } 
	 EOF 
;

// Rule ConditionOperator
ruleConditionOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_less_0_0=RULE_LESS
		{
			newLeafNode(lv_less_0_0, grammarAccess.getConditionOperatorAccess().getLessLESSTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"less",
        		true, 
        		"LESS");
	    }

)
)
    |(
(
		lv_equal_1_0=RULE_EQUAL
		{
			newLeafNode(lv_equal_1_0, grammarAccess.getConditionOperatorAccess().getEqualEQUALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"equal",
        		true, 
        		"EQUAL");
	    }

)
)
    |(
(
		lv_greater_2_0=RULE_GREATER
		{
			newLeafNode(lv_greater_2_0, grammarAccess.getConditionOperatorAccess().getGreaterGREATERTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"greater",
        		true, 
        		"GREATER");
	    }

)
)
    |(
(
		lv_not_equal_3_0=RULE_NOT_EQUAL
		{
			newLeafNode(lv_not_equal_3_0, grammarAccess.getConditionOperatorAccess().getNot_equalNOT_EQUALTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not_equal",
        		true, 
        		"NOT_EQUAL");
	    }

)
))
;





RULE_LCURLY : '{';

RULE_RCURLY : '}';

RULE_LSQUARE : '[';

RULE_RSQUARE : ']';

RULE_ARROW : '->';

RULE_SEMICOLON : ';';

RULE_COLON : ':';

RULE_PLUS : '+';

RULE_TIMES : '*';

RULE_MINUS : '-';

RULE_VERT : '|';

RULE_QUESTION_MARK : '?';

RULE_BANG : '!';

RULE_AT : '@';

RULE_ASSIGN : '=';

RULE_DOT : '.';

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_COMMA : ',';

RULE_LESS : '<';

RULE_EQUAL : '==';

RULE_GREATER : '>';

RULE_NOT_EQUAL : '!=';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


