/***************************************************************************
 *   Copyright (C) 2011-2012 by Fabrizio Montesi <famontesi@gmail.com>     *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Library General Public License as       *
 *   published by the Free Software Foundation; either version 2 of the    *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU Library General Public     *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 *                                                                         *
 *   For details about the authors of this software, see the AUTHORS file. *
 ***************************************************************************/


program openid;

/**
 * A variant of openid.cho, with dynamic credentials.
 * 
 */
protocol OpenID {
	U -> RP: username( string );	// User sends her username to the Relying Party
	RP -> IP: username( string );	// Relying Party sends the username to the Identity Provider
	U -> IP: password( string );	// User sends her password to the Identity Provider
	IP -> RP: {						// Identity Provider informs the Relying Party on whether...
	ok( void );						// ...the authentication is successful
		RP -> U: ok( void ),
	fail(string); 					// ...or the authentication failed
		RP -> U: fail( string )
	}
}

// publicOpenID is a public site offering the OpenID protocol
public publicOpenID: OpenID

main
{
	// Start authentication session
	rp[RP], u[U] start ip[IP]: publicOpenID( authSession );
	
	// Ask the user for her username
	ask@u( "[u] Insert Username", user );
	
	u.user -> rp.user: username( authSession );
	rp.user -> ip.username: username( authSession );

	// Ask the user for her password
	ask@u( "[u] Insert Password", pwd );
	
	u.pwd -> ip.password: password( authSession );
	
	/*
	 * Check the credentials at the identity provider.
	 */
	ask@ip(
		"[ip] Accept username '" + username +
		" and password '" + password + "' ?",
		accept
	);
	if (accept == "yes")@ip {
		ip -> rp: ok( authSession );
		rp -> u: ok( authSession);
		show@u( "[u] Authentication successful!" )
	} else {
		ip."Wrong username/password" -> rp.error: fail( authSession );
		rp.error -> u.error: fail( authSession );
		show@u( "[u] " + error )
	}
}
