/*
* generated by Xtext
*/
grammar InternalChor;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.chor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.chor.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.chor.services.ChorGrammarAccess;

}

@parser::members {

 	private ChorGrammarAccess grammarAccess;
 	
    public InternalChorParser(TokenStream input, ChorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Program";	
   	}
   	
   	@Override
   	protected ChorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	 iv_ruleProgram=ruleProgram 
	 { $current=$iv_ruleProgram.current; } 
	 EOF 
;

// Rule Program
ruleProgram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='program' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProgramAccess().getProgramKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)this_SEMICOLON_2=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_2, grammarAccess.getProgramAccess().getSEMICOLONTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getPreamblePreambleParserRuleCall_3_0()); 
	    }
		lv_preamble_3_0=rulePreamble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"preamble",
        		lv_preamble_3_0, 
        		"Preamble");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='main' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProgramAccess().getMainKeyword_4());
    }
this_LCURLY_5=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_5, grammarAccess.getProgramAccess().getLCURLYTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getChoreographyChoreographyParserRuleCall_6_0()); 
	    }
		lv_choreography_6_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"choreography",
        		lv_choreography_6_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_7=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_7, grammarAccess.getProgramAccess().getRCURLYTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRulePreamble
entryRulePreamble returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreambleRule()); }
	 iv_rulePreamble=rulePreamble 
	 { $current=$iv_rulePreamble.current; } 
	 EOF 
;

// Rule Preamble
rulePreamble returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPreambleAccess().getPreambleAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getPreambleAccess().getProtocolsProtocolParserRuleCall_1_0_0()); 
	    }
		lv_protocols_1_0=ruleProtocol		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreambleRule());
	        }
       		add(
       			$current, 
       			"protocols",
        		lv_protocols_1_0, 
        		"Protocol");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPreambleAccess().getSiteSiteParserRuleCall_1_1_0()); 
	    }
		lv_site_2_0=ruleSite		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreambleRule());
	        }
       		add(
       			$current, 
       			"site",
        		lv_site_2_0, 
        		"Site");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleProtocol
entryRuleProtocol returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolRule()); }
	 iv_ruleProtocol=ruleProtocol 
	 { $current=$iv_ruleProtocol.current; } 
	 EOF 
;

// Rule Protocol
ruleProtocol returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='protocol' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProtocolAccess().getProtocolKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProtocolAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProtocolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)this_LCURLY_2=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_2, grammarAccess.getProtocolAccess().getLCURLYTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolAccess().getTypeGlobalTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleGlobalType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"GlobalType");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RCURLY_4=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_4, grammarAccess.getProtocolAccess().getRCURLYTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleSite
entryRuleSite returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSiteRule()); }
	 iv_ruleSite=ruleSite 
	 { $current=$iv_ruleSite.current; } 
	 EOF 
;

// Rule Site
ruleSite returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='site' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSiteAccess().getSiteKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSiteAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiteRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)this_COLON_2=RULE_COLON
    { 
    newLeafNode(this_COLON_2, grammarAccess.getSiteAccess().getCOLONTerminalRuleCall_2()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSiteRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getSiteAccess().getProtocolProtocolCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleGlobalType
entryRuleGlobalType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalTypeRule()); }
	 iv_ruleGlobalType=ruleGlobalType 
	 { $current=$iv_ruleGlobalType.current; } 
	 EOF 
;

// Rule GlobalType
ruleGlobalType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_sender_0_0=RULE_ID
		{
			newLeafNode(lv_sender_0_0, grammarAccess.getGlobalTypeAccess().getSenderIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlobalTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sender",
        		lv_sender_0_0, 
        		"ID");
	    }

)
)this_ARROW_1=RULE_ARROW
    { 
    newLeafNode(this_ARROW_1, grammarAccess.getGlobalTypeAccess().getARROWTerminalRuleCall_1()); 
    }
(
(
		lv_receiver_2_0=RULE_ID
		{
			newLeafNode(lv_receiver_2_0, grammarAccess.getGlobalTypeAccess().getReceiverIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlobalTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"receiver",
        		lv_receiver_2_0, 
        		"ID");
	    }

)
)this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getGlobalTypeAccess().getCOLONTerminalRuleCall_3()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalTypeAccess().getBranchesBranchGTypeParserRuleCall_4_0_0()); 
	    }
		lv_branches_4_0=ruleBranchGType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalTypeRule());
	        }
       		add(
       			$current, 
       			"branches",
        		lv_branches_4_0, 
        		"BranchGType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_LCURLY_5=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_5, grammarAccess.getGlobalTypeAccess().getLCURLYTerminalRuleCall_4_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalTypeAccess().getBranchesBranchGTypeParserRuleCall_4_1_1_0()); 
	    }
		lv_branches_6_0=ruleBranchGType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalTypeRule());
	        }
       		add(
       			$current, 
       			"branches",
        		lv_branches_6_0, 
        		"BranchGType");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_7=RULE_COMMA
    { 
    newLeafNode(this_COMMA_7, grammarAccess.getGlobalTypeAccess().getCOMMATerminalRuleCall_4_1_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalTypeAccess().getBranchesBranchGTypeParserRuleCall_4_1_2_1_0()); 
	    }
		lv_branches_8_0=ruleBranchGType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalTypeRule());
	        }
       		add(
       			$current, 
       			"branches",
        		lv_branches_8_0, 
        		"BranchGType");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RCURLY_9=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_9, grammarAccess.getGlobalTypeAccess().getRCURLYTerminalRuleCall_4_1_3()); 
    }
)))
;





// Entry rule entryRuleBranchGType
entryRuleBranchGType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBranchGTypeRule()); }
	 iv_ruleBranchGType=ruleBranchGType 
	 { $current=$iv_ruleBranchGType.current; } 
	 EOF 
;

// Rule BranchGType
ruleBranchGType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operation_0_0=RULE_ID
		{
			newLeafNode(lv_operation_0_0, grammarAccess.getBranchGTypeAccess().getOperationIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBranchGTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_0_0, 
        		"ID");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getBranchGTypeAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBranchGTypeAccess().getDataTypeDataTypeParserRuleCall_2_0()); 
	    }
		lv_dataType_2_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBranchGTypeRule());
	        }
       		set(
       			$current, 
       			"dataType",
        		lv_dataType_2_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_3=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_3, grammarAccess.getBranchGTypeAccess().getRPARENTerminalRuleCall_3()); 
    }
(this_SEMICOLON_4=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_4, grammarAccess.getBranchGTypeAccess().getSEMICOLONTerminalRuleCall_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBranchGTypeAccess().getContinuationGlobalTypeParserRuleCall_4_1_0()); 
	    }
		lv_continuation_5_0=ruleGlobalType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBranchGTypeRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_5_0, 
        		"GlobalType");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	 iv_ruleDataType=ruleDataType 
	 { $current=$iv_ruleDataType.current; } 
	 EOF 
;

// Rule DataType
ruleDataType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDataTypeAccess().getBasicTypeParserRuleCall_0()); 
    }
    this_BasicType_0=ruleBasicType
    { 
        $current = $this_BasicType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDataTypeAccess().getLocalTypeParserRuleCall_1()); 
    }
    this_LocalType_1=ruleLocalType
    { 
        $current = $this_LocalType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBasicType
entryRuleBasicType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicTypeRule()); }
	 iv_ruleBasicType=ruleBasicType 
	 { $current=$iv_ruleBasicType.current; } 
	 EOF 
;

// Rule BasicType
ruleBasicType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBasicTypeAccess().getBasicTypeAction_0_0(),
            $current);
    }
)(
(
		lv_name_1_0=	'int' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getBasicTypeAccess().getNameIntKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "int");
	    }

)
))
    |(
(
		lv_name_2_0=	'string' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getBasicTypeAccess().getNameStringKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "string");
	    }

)
)
    |(
(
		lv_name_3_0=	'bool' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getBasicTypeAccess().getNameBoolKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "bool");
	    }

)
)
    |(
(
		lv_name_4_0=	'void' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getBasicTypeAccess().getNameVoidKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "void");
	    }

)
))
;





// Entry rule entryRuleLocalType
entryRuleLocalType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalTypeRule()); }
	 iv_ruleLocalType=ruleLocalType 
	 { $current=$iv_ruleLocalType.current; } 
	 EOF 
;

// Rule LocalType
ruleLocalType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalTypeAccess().getOutputTypeAction_0_0(),
            $current);
    }
)this_BANG_1=RULE_BANG
    { 
    newLeafNode(this_BANG_1, grammarAccess.getLocalTypeAccess().getBANGTerminalRuleCall_0_1()); 
    }
this_LPAREN_2=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_2, grammarAccess.getLocalTypeAccess().getLPARENTerminalRuleCall_0_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalTypeAccess().getDatatypeDataTypeParserRuleCall_0_3_0()); 
	    }
		lv_datatype_3_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalTypeRule());
	        }
       		set(
       			$current, 
       			"datatype",
        		lv_datatype_3_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_4=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_4, grammarAccess.getLocalTypeAccess().getRPARENTerminalRuleCall_0_4()); 
    }
this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getLocalTypeAccess().getSEMICOLONTerminalRuleCall_0_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalTypeAccess().getContinuationLocalTypeParserRuleCall_0_6_0()); 
	    }
		lv_continuation_6_0=ruleLocalType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalTypeRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_6_0, 
        		"LocalType");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalTypeAccess().getInputTypeAction_1_0(),
            $current);
    }
)this_QUESTION_MARK_8=RULE_QUESTION_MARK
    { 
    newLeafNode(this_QUESTION_MARK_8, grammarAccess.getLocalTypeAccess().getQUESTION_MARKTerminalRuleCall_1_1()); 
    }
this_LPAREN_9=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getLocalTypeAccess().getLPARENTerminalRuleCall_1_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalTypeAccess().getDatatypeDataTypeParserRuleCall_1_3_0()); 
	    }
		lv_datatype_10_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalTypeRule());
	        }
       		set(
       			$current, 
       			"datatype",
        		lv_datatype_10_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_11=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_11, grammarAccess.getLocalTypeAccess().getRPARENTerminalRuleCall_1_4()); 
    }
this_SEMICOLON_12=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_12, grammarAccess.getLocalTypeAccess().getSEMICOLONTerminalRuleCall_1_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalTypeAccess().getContinuationLocalTypeParserRuleCall_1_6_0()); 
	    }
		lv_continuation_13_0=ruleLocalType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalTypeRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_13_0, 
        		"LocalType");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalTypeAccess().getBranchingTypeAction_2_0(),
            $current);
    }
)this_QUESTION_MARK_15=RULE_QUESTION_MARK
    { 
    newLeafNode(this_QUESTION_MARK_15, grammarAccess.getLocalTypeAccess().getQUESTION_MARKTerminalRuleCall_2_1()); 
    }
this_LCURLY_16=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_16, grammarAccess.getLocalTypeAccess().getLCURLYTerminalRuleCall_2_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalTypeAccess().getBranchesBranchTypeParserRuleCall_2_3_0()); 
	    }
		lv_branches_17_0=ruleBranchType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalTypeRule());
	        }
       		add(
       			$current, 
       			"branches",
        		lv_branches_17_0, 
        		"BranchType");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_18=RULE_COMMA
    { 
    newLeafNode(this_COMMA_18, grammarAccess.getLocalTypeAccess().getCOMMATerminalRuleCall_2_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalTypeAccess().getBranchesBranchTypeParserRuleCall_2_4_1_0()); 
	    }
		lv_branches_19_0=ruleBranchType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalTypeRule());
	        }
       		add(
       			$current, 
       			"branches",
        		lv_branches_19_0, 
        		"BranchType");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RCURLY_20=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_20, grammarAccess.getLocalTypeAccess().getRCURLYTerminalRuleCall_2_5()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLocalTypeAccess().getSelectionTypeAction_3_0(),
            $current);
    }
)this_BANG_22=RULE_BANG
    { 
    newLeafNode(this_BANG_22, grammarAccess.getLocalTypeAccess().getBANGTerminalRuleCall_3_1()); 
    }
this_LCURLY_23=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_23, grammarAccess.getLocalTypeAccess().getLCURLYTerminalRuleCall_3_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalTypeAccess().getBranchesBranchTypeParserRuleCall_3_3_0()); 
	    }
		lv_branches_24_0=ruleBranchType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalTypeRule());
	        }
       		add(
       			$current, 
       			"branches",
        		lv_branches_24_0, 
        		"BranchType");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_25=RULE_COMMA
    { 
    newLeafNode(this_COMMA_25, grammarAccess.getLocalTypeAccess().getCOMMATerminalRuleCall_3_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalTypeAccess().getBranchesBranchTypeParserRuleCall_3_4_1_0()); 
	    }
		lv_branches_26_0=ruleBranchType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalTypeRule());
	        }
       		add(
       			$current, 
       			"branches",
        		lv_branches_26_0, 
        		"BranchType");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RCURLY_27=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_27, grammarAccess.getLocalTypeAccess().getRCURLYTerminalRuleCall_3_5()); 
    }
))
;





// Entry rule entryRuleBranchType
entryRuleBranchType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBranchTypeRule()); }
	 iv_ruleBranchType=ruleBranchType 
	 { $current=$iv_ruleBranchType.current; } 
	 EOF 
;

// Rule BranchType
ruleBranchType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_label_0_0=RULE_ID
		{
			newLeafNode(lv_label_0_0, grammarAccess.getBranchTypeAccess().getLabelIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBranchTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_0_0, 
        		"ID");
	    }

)
)this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getBranchTypeAccess().getCOLONTerminalRuleCall_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getBranchTypeAccess().getLocalTypeParserRuleCall_2()); 
    }
    this_LocalType_2=ruleLocalType
    { 
        $current = $this_LocalType_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleChoreography
entryRuleChoreography returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChoreographyRule()); }
	 iv_ruleChoreography=ruleChoreography 
	 { $current=$iv_ruleChoreography.current; } 
	 EOF 
;

// Rule Choreography
ruleChoreography returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getStartParserRuleCall_0()); 
    }
    this_Start_0=ruleStart
    { 
        $current = $this_Start_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getInteractionParserRuleCall_1()); 
    }
    this_Interaction_1=ruleInteraction
    { 
        $current = $this_Interaction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getIfThenElseParserRuleCall_2()); 
    }
    this_IfThenElse_2=ruleIfThenElse
    { 
        $current = $this_IfThenElse_2.current; 
        afterParserOrEnumRuleCall();
    }

    |(this_LCURLY_3=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_3, grammarAccess.getChoreographyAccess().getLCURLYTerminalRuleCall_3_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getChoreographyAccess().getChoreographyParserRuleCall_3_1()); 
    }
    this_Choreography_4=ruleChoreography
    { 
        $current = $this_Choreography_4.current; 
        afterParserOrEnumRuleCall();
    }
this_RCURLY_5=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_5, grammarAccess.getChoreographyAccess().getRCURLYTerminalRuleCall_3_2()); 
    }
))
;





// Entry rule entryRuleStart
entryRuleStart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStartRule()); }
	 iv_ruleStart=ruleStart 
	 { $current=$iv_ruleStart.current; } 
	 EOF 
;

// Rule Start
ruleStart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStartAccess().getActiveThreadsThreadWithRoleParserRuleCall_0_0()); 
	    }
		lv_activeThreads_0_0=ruleThreadWithRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartRule());
	        }
       		add(
       			$current, 
       			"activeThreads",
        		lv_activeThreads_0_0, 
        		"ThreadWithRole");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getStartAccess().getCOMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStartAccess().getActiveThreadsThreadWithRoleParserRuleCall_1_1_0()); 
	    }
		lv_activeThreads_2_0=ruleThreadWithRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartRule());
	        }
       		add(
       			$current, 
       			"activeThreads",
        		lv_activeThreads_2_0, 
        		"ThreadWithRole");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3='start' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStartAccess().getStartKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStartAccess().getServiceThreadsThreadWithRoleParserRuleCall_3_0()); 
	    }
		lv_serviceThreads_4_0=ruleThreadWithRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartRule());
	        }
       		add(
       			$current, 
       			"serviceThreads",
        		lv_serviceThreads_4_0, 
        		"ThreadWithRole");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_5=RULE_COMMA
    { 
    newLeafNode(this_COMMA_5, grammarAccess.getStartAccess().getCOMMATerminalRuleCall_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStartAccess().getServiceThreadsThreadWithRoleParserRuleCall_4_1_0()); 
	    }
		lv_serviceThreads_6_0=ruleThreadWithRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartRule());
	        }
       		add(
       			$current, 
       			"serviceThreads",
        		lv_serviceThreads_6_0, 
        		"ThreadWithRole");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_COLON_7=RULE_COLON
    { 
    newLeafNode(this_COLON_7, grammarAccess.getStartAccess().getCOLONTerminalRuleCall_5()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStartRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getStartAccess().getPublicChannelSiteCrossReference_6_0()); 
	}

)
)this_LPAREN_9=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getStartAccess().getLPARENTerminalRuleCall_7()); 
    }
(
(
		lv_session_10_0=RULE_ID
		{
			newLeafNode(lv_session_10_0, grammarAccess.getStartAccess().getSessionIDTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"session",
        		lv_session_10_0, 
        		"ID");
	    }

)
)this_RPAREN_11=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_11, grammarAccess.getStartAccess().getRPARENTerminalRuleCall_9()); 
    }
(this_SEMICOLON_12=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_12, grammarAccess.getStartAccess().getSEMICOLONTerminalRuleCall_10_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStartAccess().getContinuationChoreographyParserRuleCall_10_1_0()); 
	    }
		lv_continuation_13_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_13_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleThreadWithRole
entryRuleThreadWithRole returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getThreadWithRoleRule()); }
	 iv_ruleThreadWithRole=ruleThreadWithRole 
	 { $current=$iv_ruleThreadWithRole.current; } 
	 EOF 
;

// Rule ThreadWithRole
ruleThreadWithRole returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_thread_0_0=RULE_ID
		{
			newLeafNode(lv_thread_0_0, grammarAccess.getThreadWithRoleAccess().getThreadIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getThreadWithRoleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_0_0, 
        		"ID");
	    }

)
)this_LSQUARE_1=RULE_LSQUARE
    { 
    newLeafNode(this_LSQUARE_1, grammarAccess.getThreadWithRoleAccess().getLSQUARETerminalRuleCall_1()); 
    }
(
(
		lv_role_2_0=RULE_ID
		{
			newLeafNode(lv_role_2_0, grammarAccess.getThreadWithRoleAccess().getRoleIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getThreadWithRoleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"role",
        		lv_role_2_0, 
        		"ID");
	    }

)
)this_RSQUARE_3=RULE_RSQUARE
    { 
    newLeafNode(this_RSQUARE_3, grammarAccess.getThreadWithRoleAccess().getRSQUARETerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleInteraction
entryRuleInteraction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractionRule()); }
	 iv_ruleInteraction=ruleInteraction 
	 { $current=$iv_ruleInteraction.current; } 
	 EOF 
;

// Rule Interaction
ruleInteraction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_sender_0_0=RULE_ID
		{
			newLeafNode(lv_sender_0_0, grammarAccess.getInteractionAccess().getSenderIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sender",
        		lv_sender_0_0, 
        		"ID");
	    }

)
)(this_DOT_1=RULE_DOT
    { 
    newLeafNode(this_DOT_1, grammarAccess.getInteractionAccess().getDOTTerminalRuleCall_1_0()); 
    }
this_LPAREN_2=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_2, grammarAccess.getInteractionAccess().getLPARENTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionAccess().getSenderExpressionExpressionParserRuleCall_1_2_0()); 
	    }
		lv_senderExpression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionRule());
	        }
       		set(
       			$current, 
       			"senderExpression",
        		lv_senderExpression_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_4=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_4, grammarAccess.getInteractionAccess().getRPARENTerminalRuleCall_1_3()); 
    }
)?this_ARROW_5=RULE_ARROW
    { 
    newLeafNode(this_ARROW_5, grammarAccess.getInteractionAccess().getARROWTerminalRuleCall_2()); 
    }
(
(
		lv_receiver_6_0=RULE_ID
		{
			newLeafNode(lv_receiver_6_0, grammarAccess.getInteractionAccess().getReceiverIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"receiver",
        		lv_receiver_6_0, 
        		"ID");
	    }

)
)(this_DOT_7=RULE_DOT
    { 
    newLeafNode(this_DOT_7, grammarAccess.getInteractionAccess().getDOTTerminalRuleCall_4_0()); 
    }
(
(
		lv_receiverVariable_8_0=RULE_ID
		{
			newLeafNode(lv_receiverVariable_8_0, grammarAccess.getInteractionAccess().getReceiverVariableIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"receiverVariable",
        		lv_receiverVariable_8_0, 
        		"ID");
	    }

)
))?this_COLON_9=RULE_COLON
    { 
    newLeafNode(this_COLON_9, grammarAccess.getInteractionAccess().getCOLONTerminalRuleCall_5()); 
    }
(
(
		lv_operation_10_0=RULE_ID
		{
			newLeafNode(lv_operation_10_0, grammarAccess.getInteractionAccess().getOperationIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_10_0, 
        		"ID");
	    }

)
)this_LPAREN_11=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_11, grammarAccess.getInteractionAccess().getLPARENTerminalRuleCall_7()); 
    }
(
(
		lv_session_12_0=RULE_ID
		{
			newLeafNode(lv_session_12_0, grammarAccess.getInteractionAccess().getSessionIDTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"session",
        		lv_session_12_0, 
        		"ID");
	    }

)
)this_RPAREN_13=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_13, grammarAccess.getInteractionAccess().getRPARENTerminalRuleCall_9()); 
    }
(this_SEMICOLON_14=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_14, grammarAccess.getInteractionAccess().getSEMICOLONTerminalRuleCall_10_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractionAccess().getContinuationChoreographyParserRuleCall_10_1_0()); 
	    }
		lv_continuation_15_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractionRule());
	        }
       		set(
       			$current, 
       			"continuation",
        		lv_continuation_15_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleIfThenElse
entryRuleIfThenElse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfThenElseRule()); }
	 iv_ruleIfThenElse=ruleIfThenElse 
	 { $current=$iv_ruleIfThenElse.current; } 
	 EOF 
;

// Rule IfThenElse
ruleIfThenElse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIfThenElseAccess().getIfKeyword_0());
    }
this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getIfThenElseAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseAccess().getConditionConditionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_3=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_3, grammarAccess.getIfThenElseAccess().getRPARENTerminalRuleCall_3()); 
    }
this_AT_4=RULE_AT
    { 
    newLeafNode(this_AT_4, grammarAccess.getIfThenElseAccess().getATTerminalRuleCall_4()); 
    }
(
(
		lv_thread_5_0=RULE_ID
		{
			newLeafNode(lv_thread_5_0, grammarAccess.getIfThenElseAccess().getThreadIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfThenElseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"thread",
        		lv_thread_5_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseAccess().getThenChoreographyParserRuleCall_6_0()); 
	    }
		lv_then_6_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_6_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='else' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIfThenElseAccess().getElseKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseAccess().getElseChoreographyParserRuleCall_7_1_0()); 
	    }
		lv_else_8_0=ruleChoreography		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_8_0, 
        		"Choreography");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getSumExpressionSumExpressionParserRuleCall_0()); 
	    }
		lv_sumExpression_0_0=ruleSumExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"sumExpression",
        		lv_sumExpression_0_0, 
        		"SumExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSumExpression
entryRuleSumExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSumExpressionRule()); }
	 iv_ruleSumExpression=ruleSumExpression 
	 { $current=$iv_ruleSumExpression.current; } 
	 EOF 
;

// Rule SumExpression
ruleSumExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionAccess().getChildrenExpressionBasicTermParserRuleCall_0_0()); 
	    }
		lv_children_0_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_0_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionAccess().getChildrenSumExpressionTermParserRuleCall_1_0()); 
	    }
		lv_children_1_0=ruleSumExpressionTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_1_0, 
        		"SumExpressionTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSumExpressionTerm
entryRuleSumExpressionTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSumExpressionTermRule()); }
	 iv_ruleSumExpressionTerm=ruleSumExpressionTerm 
	 { $current=$iv_ruleSumExpressionTerm.current; } 
	 EOF 
;

// Rule SumExpressionTerm
ruleSumExpressionTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSumExpressionTermAccess().getSumExpressionAddTermAction_0_0(),
            $current);
    }
)this_PLUS_1=RULE_PLUS
    { 
    newLeafNode(this_PLUS_1, grammarAccess.getSumExpressionTermAccess().getPLUSTerminalRuleCall_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionTermAccess().getExpressionExpressionBasicTermParserRuleCall_0_2_0()); 
	    }
		lv_expression_2_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionTermRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSumExpressionTermAccess().getSumExpressionSubtractTermAction_1_0(),
            $current);
    }
)this_MINUS_4=RULE_MINUS
    { 
    newLeafNode(this_MINUS_4, grammarAccess.getSumExpressionTermAccess().getMINUSTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSumExpressionTermAccess().getExpressionExpressionBasicTermParserRuleCall_1_2_0()); 
	    }
		lv_expression_5_0=ruleExpressionBasicTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumExpressionTermRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"ExpressionBasicTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleExpressionBasicTerm
entryRuleExpressionBasicTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionBasicTermRule()); }
	 iv_ruleExpressionBasicTerm=ruleExpressionBasicTerm 
	 { $current=$iv_ruleExpressionBasicTerm.current; } 
	 EOF 
;

// Rule ExpressionBasicTerm
ruleExpressionBasicTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_variable_0_0=RULE_ID
		{
			newLeafNode(lv_variable_0_0, grammarAccess.getExpressionBasicTermAccess().getVariableIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionBasicTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variable",
        		lv_variable_0_0, 
        		"ID");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionBasicTermAccess().getConstantConstantParserRuleCall_1_0()); 
	    }
		lv_constant_1_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionBasicTermRule());
	        }
       		set(
       			$current, 
       			"constant",
        		lv_constant_1_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_intValue_0_0=RULE_INT
		{
			newLeafNode(lv_intValue_0_0, grammarAccess.getConstantAccess().getIntValueINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"intValue",
        		lv_intValue_0_0, 
        		"INT");
	    }

)
)
    |(
(
		lv_strValue_1_0=RULE_STRING
		{
			newLeafNode(lv_strValue_1_0, grammarAccess.getConstantAccess().getStrValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"strValue",
        		lv_strValue_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getCompareConditionCompareConditionParserRuleCall_0()); 
	    }
		lv_compareCondition_0_0=ruleCompareCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		set(
       			$current, 
       			"compareCondition",
        		lv_compareCondition_0_0, 
        		"CompareCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleCompareCondition
entryRuleCompareCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompareConditionRule()); }
	 iv_ruleCompareCondition=ruleCompareCondition 
	 { $current=$iv_ruleCompareCondition.current; } 
	 EOF 
;

// Rule CompareCondition
ruleCompareCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompareConditionAccess().getLeftExpressionExpressionParserRuleCall_0_0()); 
	    }
		lv_leftExpression_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareConditionRule());
	        }
       		set(
       			$current, 
       			"leftExpression",
        		lv_leftExpression_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareConditionAccess().getOperatorConditionOperatorParserRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleConditionOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareConditionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"ConditionOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareConditionAccess().getRightExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_rightExpression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareConditionRule());
	        }
       		set(
       			$current, 
       			"rightExpression",
        		lv_rightExpression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConditionOperator
entryRuleConditionOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionOperatorRule()); } 
	 iv_ruleConditionOperator=ruleConditionOperator 
	 { $current=$iv_ruleConditionOperator.current.getText(); }  
	 EOF 
;

// Rule ConditionOperator
ruleConditionOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_LESS_0=RULE_LESS    {
		$current.merge(this_LESS_0);
    }

    { 
    newLeafNode(this_LESS_0, grammarAccess.getConditionOperatorAccess().getLESSTerminalRuleCall_0()); 
    }

    |    this_EQUAL_1=RULE_EQUAL    {
		$current.merge(this_EQUAL_1);
    }

    { 
    newLeafNode(this_EQUAL_1, grammarAccess.getConditionOperatorAccess().getEQUALTerminalRuleCall_1()); 
    }

    |    this_GREATER_2=RULE_GREATER    {
		$current.merge(this_GREATER_2);
    }

    { 
    newLeafNode(this_GREATER_2, grammarAccess.getConditionOperatorAccess().getGREATERTerminalRuleCall_2()); 
    }

    |    this_NOT_EQUAL_3=RULE_NOT_EQUAL    {
		$current.merge(this_NOT_EQUAL_3);
    }

    { 
    newLeafNode(this_NOT_EQUAL_3, grammarAccess.getConditionOperatorAccess().getNOT_EQUALTerminalRuleCall_3()); 
    }
)
    ;





RULE_LCURLY : '{';

RULE_RCURLY : '}';

RULE_LSQUARE : '[';

RULE_RSQUARE : ']';

RULE_ARROW : '->';

RULE_SEMICOLON : ';';

RULE_COLON : ':';

RULE_PLUS : '+';

RULE_TIMES : '*';

RULE_MINUS : '-';

RULE_VERT : '|';

RULE_QUESTION_MARK : '?';

RULE_BANG : '!';

RULE_AT : '@';

RULE_ASSIGN : '=';

RULE_DOT : '.';

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_COMMA : ',';

RULE_LESS : '<';

RULE_EQUAL : '==';

RULE_GREATER : '>';

RULE_NOT_EQUAL : '!=';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


